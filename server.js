const express = require("express");
const fs = require("fs");
const path = require("path");

const app = express();
const PORT = 8080;
const FILE_PATH = path.join(__dirname, "public", "random_szam.txt");

app.use(express.static("public"));
app.use(express.json());

// ðŸ“Œ Ha a fÃ¡jl nem lÃ©tezik, hozzunk lÃ©tre egy alapÃ©rtelmezett seedet
if (!fs.existsSync(FILE_PATH)) {
    fs.writeFileSync(FILE_PATH, "123456:0:"); // AlapÃ©rtelmezett seed, extrÃ©m mÃ³d ki
}

// Olvassuk be Ã©s kÃ¼ldjÃ¼k vissza a `random_szam.txt` tartalmÃ¡t
app.get("/random_szam.txt", (req, res) => {
    fs.readFile(FILE_PATH, "utf8", (err, data) => {
	if (err) {
            return res.status(500).send("Hiba a fÃ¡jl olvasÃ¡sakor");
        }
        res.send(data);
    });
});

// ðŸ“Œ Ãšj seed generÃ¡lÃ¡sa Ã©s extrÃ©m mÃ³d mentÃ©se
app.put("/random_szam.txt", (req, res) => {
    const newSeed = Math.floor(Math.random() * 1000000);
    const extremeMode = Math.random() < 0.5 ? 1 : 0; // 50% esÃ©ly extrÃ©m mÃ³dra

    let negativeIndices = [];
    if (extremeMode) {
        for (let i = 0; i < 81; i++) { // 9x9 max mÃ©ret, de a jÃ¡tÃ©k Ãºgyis csak a megfelelÅ‘ mÃ©retig nÃ©zi
            if (Math.random() < 0.5) { // 50% esÃ©llyel negatÃ­v lesz
                negativeIndices.push(i);
            }
        }
    }

    const newContent = `${newSeed}:${extremeMode}:${negativeIndices.join(",")}`;

    fs.writeFile(FILE_PATH, newContent, (err) => {
        if (err) {
            return res.status(500).send("Hiba a fÃ¡jl Ã­rÃ¡sakor");
        }
        res.send(`Ãšj seed generÃ¡lva: ${newSeed}, ExtrÃ©m mÃ³d: ${extremeMode}, NegatÃ­v szÃ¡mok: ${negativeIndices}`);
    });
});

app.listen(PORT, () => {
    console.log(`Szerver fut: http://localhost:${PORT}`);
});
